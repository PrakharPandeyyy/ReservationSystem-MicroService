services:
  # Define the reservations service
  reservations:
    # Specify the build configuration for the reservations service
    build:
      # Set the build context to the current directory
      context: .
      # Specify the Dockerfile location for the reservations service
      dockerfile: ./apps/reservations/Dockerfile
      # Use the "development" stage from the Dockerfile during the build process
      target: development
    # Override the default command to start the application in development mode
    command: npm run start:dev reservations
    env_file:
      # Load environment variables from the .env file
      - ./apps/reservations/.env
    # Map the container's port 3000 to the host's port 3000 for accessing the service
    ports:
      - 3000:3000
    # Mount the current directory on the host machine to the container for live file updates
    volumes:
      - .:/usr/src/app
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    env_file:
      - ./apps/payments/.env
    ports:
      - 3003:3003
    volumes:
      - .:/usr/src/app
  # Define the MongoDB service
  mongo:
    # Use the official MongoDB image from Docker Hub
    image: mongo
